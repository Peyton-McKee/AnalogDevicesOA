// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::{prelude::*, sql_types::Bool};
use uuid::Uuid;

use super::schema::{message, producer};

#[derive(Queryable, Debug)]
pub struct Message {
    pub id: Uuid,
    pub message_body: String,
    pub sent: bool,
    pub failed: bool,
    pub time_took: Option<i32>,
    pub produced_by: Uuid,
}

#[derive(Insertable)]
#[diesel(table_name = message)]
pub struct NewMessage {
    pub message_body: String,
    pub produced_by: Uuid,
}

#[derive(Queryable, Identifiable, AsChangeset, Debug)]
#[diesel(table_name = producer)]
pub struct Producer {
    pub id: Uuid,
    pub name: String,
    pub number_messages: i32,
    pub average_send_delay: i32,
    pub failure_rate: i32,
    pub num_senders: Option<i32>,
}

impl Clone for Producer {
    fn clone(&self) -> Self {
        Producer {
            id: self.id,
            name: self.name.to_string(),
            num_senders: self.num_senders,
            failure_rate: self.failure_rate,
            number_messages: self.number_messages,
            average_send_delay: self.average_send_delay,
        }
    }
}

#[derive(Insertable, AsChangeset, Debug)]
#[diesel(table_name = producer)]
pub struct NewProducer {
    pub name: String,
    pub number_messages: i32,
    pub average_send_delay: i32,
    pub failure_rate: i32,
    pub num_senders: Option<i32>,
}
